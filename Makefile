# See LICENSE file for copyright and license details
# libgrapheme - grapheme cluster utility library
.POSIX:

include config.mk

BIN = src/test
REQ = src/codepoint src/boundary src/grapheme
GBP_URL = https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt
EMO_URL = https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt
GBT_URL = https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakTest.txt
GBP = data/gbp.txt
EMO = data/emo.txt
GBT = data/gbt.txt
MAN3 = man/grapheme_len.3
MAN7 = man/libgrapheme.7

all: libgrapheme.a libgrapheme.so $(BIN)

src/test: src/test.o $(REQ:=.o)

src/boundary.o: src/boundary.c config.mk src/codepoint.h src/boundary.h
src/codepoint.o: src/codepoint.c config.mk src/codepoint.h
src/grapheme.o: src/grapheme.c config.mk src/codepoint.h src/boundary.h
src/test.o: src/test.c config.mk src/codepoint.h src/boundary.h

.o:
	$(CC) -o $@ $(LDFLAGS) $< $(REQ:=.o)

.c.o:
	$(CC) -c -o $@ $(CPPFLAGS) $(CFLAGS) $<

libgrapheme.a: $(REQ:=.o)
	$(AR) rc $@ $?
	$(RANLIB) $@

libgrapheme.so: $(REQ:=.o)
	$(CC) -o $@ -shared $?

test:
	./src/test

src/boundary.c: data/gbt.awk $(GBP) data/emo.awk $(EMO) src/boundary_body.c
	printf "/* Automatically generated by gbp.awk and emo.awk */\n" > $@
	printf "#include \"codepoint.h\"\n" >> $@
	awk -f data/gbp.awk $(GBP) >> $@
	awk -f data/emo.awk $(EMO) >> $@
	printf "\n" >> $@
	cat src/boundary_body.c >> $@

src/test.c: data/gbt.awk $(GBT) src/test_body.c
	printf "/* Automatically generated by gbt.awk */\n" > $@
	printf "#include <stddef.h>\n\n" >> $@
	printf "#include \"codepoint.h\"\n\n" >> $@
	awk -f data/gbt.awk $(GBT) >> $@
	printf "\n" >> $@
	cat src/test_body.c >> $@

$(GBP):
	wget -nc -O $@ $(GBP_URL)

$(EMO):
	wget -nc -O $@ $(EMO_URL)

$(GBT):
	wget -nc -O $@ $(GBT_URL)

install: all
	mkdir -p "$(DESTDIR)$(LIBPREFIX)"
	mkdir -p "$(DESTDIR)$(INCPREFIX)"
	mkdir -p "$(DESTDIR)$(MANPREFIX)/man3"
	mkdir -p "$(DESTDIR)$(MANPREFIX)/man7"
	cp -f $(MAN3) "$(DESTDIR)$(MANPREFIX)/man3"
	cp -f $(MAN7) "$(DESTDIR)$(MANPREFIX)/man7"
	cp -f libgrapheme.a "$(DESTDIR)$(LIBPREFIX)"
	cp -f libgrapheme.so "$(DESTDIR)$(LIBPREFIX)"
	cp -f grapheme.h "$(DESTDIR)$(INCPREFIX)"

uninstall:
	for m in $(MAN3); do rm -f "$(DESTDIR)$(MANPREFIX)/man3/`basename $$m`"; done
	for m in $(MAN7); do rm -f "$(DESTDIR)$(MANPREFIX)/man7/`basename $$m`"; done
	rm -f "$(DESTDIR)$(LIBPREFIX)/libgrapheme.a"
	rm -f "$(DESTDIR)$(LIBPREFIX)/libgrapheme.so"
	rm -f "$(DESTDIR)$(INCPREFIX)/grapheme.h"

clean:
	rm -f src/boundary.c src/test.c $(REQ:=.o) $(BIN:=.o) $(BIN) libgrapheme.a libgrapheme.so

clean-data:
	rm -f $(GBP) $(EMO) $(GBT)
